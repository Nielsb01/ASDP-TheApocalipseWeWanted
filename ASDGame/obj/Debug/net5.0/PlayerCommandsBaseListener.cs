//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\arnold\source\repos\Test\Test\InputHandling\Antlr\Grammar\PlayerCommands.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace InputHandling.Antlr.Grammar {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IPlayerCommandsListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class PlayerCommandsBaseListener : IPlayerCommandsListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>drop</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrop([NotNull] PlayerCommandsParser.DropContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>drop</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrop([NotNull] PlayerCommandsParser.DropContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>resume</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResume([NotNull] PlayerCommandsParser.ResumeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>resume</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResume([NotNull] PlayerCommandsParser.ResumeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>move</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMove([NotNull] PlayerCommandsParser.MoveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>move</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMove([NotNull] PlayerCommandsParser.MoveContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>replace</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReplace([NotNull] PlayerCommandsParser.ReplaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>replace</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReplace([NotNull] PlayerCommandsParser.ReplaceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>pickup</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPickup([NotNull] PlayerCommandsParser.PickupContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pickup</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPickup([NotNull] PlayerCommandsParser.PickupContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>joinSession</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoinSession([NotNull] PlayerCommandsParser.JoinSessionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>joinSession</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoinSession([NotNull] PlayerCommandsParser.JoinSessionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>say</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSay([NotNull] PlayerCommandsParser.SayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>say</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSay([NotNull] PlayerCommandsParser.SayContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>createSession</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreateSession([NotNull] PlayerCommandsParser.CreateSessionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>createSession</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreateSession([NotNull] PlayerCommandsParser.CreateSessionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>pause</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPause([NotNull] PlayerCommandsParser.PauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pause</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPause([NotNull] PlayerCommandsParser.PauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>exit</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExit([NotNull] PlayerCommandsParser.ExitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>exit</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExit([NotNull] PlayerCommandsParser.ExitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>attack</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttack([NotNull] PlayerCommandsParser.AttackContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>attack</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttack([NotNull] PlayerCommandsParser.AttackContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>startSession</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStartSession([NotNull] PlayerCommandsParser.StartSessionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>startSession</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStartSession([NotNull] PlayerCommandsParser.StartSessionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>shout</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShout([NotNull] PlayerCommandsParser.ShoutContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>shout</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShout([NotNull] PlayerCommandsParser.ShoutContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>requestSessions</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRequestSessions([NotNull] PlayerCommandsParser.RequestSessionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>requestSessions</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRequestSessions([NotNull] PlayerCommandsParser.RequestSessionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.input"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInput([NotNull] PlayerCommandsParser.InputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.input"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInput([NotNull] PlayerCommandsParser.InputContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.step"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStep([NotNull] PlayerCommandsParser.StepContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.step"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStep([NotNull] PlayerCommandsParser.StepContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.message"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMessage([NotNull] PlayerCommandsParser.MessageContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.message"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMessage([NotNull] PlayerCommandsParser.MessageContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommand([NotNull] PlayerCommandsParser.CommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommand([NotNull] PlayerCommandsParser.CommandContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.forward"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForward([NotNull] PlayerCommandsParser.ForwardContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.forward"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForward([NotNull] PlayerCommandsParser.ForwardContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.backward"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBackward([NotNull] PlayerCommandsParser.BackwardContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.backward"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBackward([NotNull] PlayerCommandsParser.BackwardContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.left"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeft([NotNull] PlayerCommandsParser.LeftContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.left"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeft([NotNull] PlayerCommandsParser.LeftContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.right"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRight([NotNull] PlayerCommandsParser.RightContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.right"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRight([NotNull] PlayerCommandsParser.RightContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.direction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirection([NotNull] PlayerCommandsParser.DirectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.direction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirection([NotNull] PlayerCommandsParser.DirectionContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace InputHandling.Antlr.Grammar
