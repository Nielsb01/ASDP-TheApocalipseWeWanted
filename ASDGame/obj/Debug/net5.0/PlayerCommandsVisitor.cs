//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\arnold\source\repos\Test\Test\InputHandling\Antlr\Grammar\PlayerCommands.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace InputHandling.Antlr.Grammar {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="PlayerCommandsParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IPlayerCommandsVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>drop</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDrop([NotNull] PlayerCommandsParser.DropContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>resume</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitResume([NotNull] PlayerCommandsParser.ResumeContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>move</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMove([NotNull] PlayerCommandsParser.MoveContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>replace</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReplace([NotNull] PlayerCommandsParser.ReplaceContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>pickup</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPickup([NotNull] PlayerCommandsParser.PickupContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>joinSession</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJoinSession([NotNull] PlayerCommandsParser.JoinSessionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>say</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSay([NotNull] PlayerCommandsParser.SayContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>createSession</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCreateSession([NotNull] PlayerCommandsParser.CreateSessionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>pause</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPause([NotNull] PlayerCommandsParser.PauseContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>exit</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExit([NotNull] PlayerCommandsParser.ExitContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>attack</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttack([NotNull] PlayerCommandsParser.AttackContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>startSession</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStartSession([NotNull] PlayerCommandsParser.StartSessionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>shout</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShout([NotNull] PlayerCommandsParser.ShoutContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>requestSessions</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRequestSessions([NotNull] PlayerCommandsParser.RequestSessionsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PlayerCommandsParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInput([NotNull] PlayerCommandsParser.InputContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PlayerCommandsParser.step"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStep([NotNull] PlayerCommandsParser.StepContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PlayerCommandsParser.message"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMessage([NotNull] PlayerCommandsParser.MessageContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand([NotNull] PlayerCommandsParser.CommandContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PlayerCommandsParser.forward"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForward([NotNull] PlayerCommandsParser.ForwardContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PlayerCommandsParser.backward"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBackward([NotNull] PlayerCommandsParser.BackwardContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PlayerCommandsParser.left"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLeft([NotNull] PlayerCommandsParser.LeftContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PlayerCommandsParser.right"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRight([NotNull] PlayerCommandsParser.RightContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="PlayerCommandsParser.direction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDirection([NotNull] PlayerCommandsParser.DirectionContext context);
}
} // namespace InputHandling.Antlr.Grammar
