//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\arnold\source\repos\Test\Test\InputHandling\Antlr\Grammar\PlayerCommands.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace InputHandling.Antlr.Grammar {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="PlayerCommandsParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IPlayerCommandsListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>drop</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrop([NotNull] PlayerCommandsParser.DropContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>drop</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrop([NotNull] PlayerCommandsParser.DropContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>resume</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResume([NotNull] PlayerCommandsParser.ResumeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>resume</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResume([NotNull] PlayerCommandsParser.ResumeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>move</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMove([NotNull] PlayerCommandsParser.MoveContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>move</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMove([NotNull] PlayerCommandsParser.MoveContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>replace</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReplace([NotNull] PlayerCommandsParser.ReplaceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>replace</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReplace([NotNull] PlayerCommandsParser.ReplaceContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>pickup</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPickup([NotNull] PlayerCommandsParser.PickupContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pickup</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPickup([NotNull] PlayerCommandsParser.PickupContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>joinSession</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoinSession([NotNull] PlayerCommandsParser.JoinSessionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>joinSession</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoinSession([NotNull] PlayerCommandsParser.JoinSessionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>say</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSay([NotNull] PlayerCommandsParser.SayContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>say</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSay([NotNull] PlayerCommandsParser.SayContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>createSession</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateSession([NotNull] PlayerCommandsParser.CreateSessionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>createSession</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateSession([NotNull] PlayerCommandsParser.CreateSessionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>pause</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPause([NotNull] PlayerCommandsParser.PauseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pause</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPause([NotNull] PlayerCommandsParser.PauseContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>exit</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExit([NotNull] PlayerCommandsParser.ExitContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exit</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExit([NotNull] PlayerCommandsParser.ExitContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>attack</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttack([NotNull] PlayerCommandsParser.AttackContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>attack</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttack([NotNull] PlayerCommandsParser.AttackContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>startSession</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStartSession([NotNull] PlayerCommandsParser.StartSessionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>startSession</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStartSession([NotNull] PlayerCommandsParser.StartSessionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>shout</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShout([NotNull] PlayerCommandsParser.ShoutContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>shout</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShout([NotNull] PlayerCommandsParser.ShoutContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>requestSessions</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRequestSessions([NotNull] PlayerCommandsParser.RequestSessionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>requestSessions</c>
	/// labeled alternative in <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRequestSessions([NotNull] PlayerCommandsParser.RequestSessionsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInput([NotNull] PlayerCommandsParser.InputContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInput([NotNull] PlayerCommandsParser.InputContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.step"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStep([NotNull] PlayerCommandsParser.StepContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.step"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStep([NotNull] PlayerCommandsParser.StepContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.message"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMessage([NotNull] PlayerCommandsParser.MessageContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.message"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMessage([NotNull] PlayerCommandsParser.MessageContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommand([NotNull] PlayerCommandsParser.CommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommand([NotNull] PlayerCommandsParser.CommandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.forward"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForward([NotNull] PlayerCommandsParser.ForwardContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.forward"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForward([NotNull] PlayerCommandsParser.ForwardContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.backward"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBackward([NotNull] PlayerCommandsParser.BackwardContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.backward"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBackward([NotNull] PlayerCommandsParser.BackwardContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.left"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeft([NotNull] PlayerCommandsParser.LeftContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.left"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeft([NotNull] PlayerCommandsParser.LeftContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.right"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRight([NotNull] PlayerCommandsParser.RightContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.right"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRight([NotNull] PlayerCommandsParser.RightContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="PlayerCommandsParser.direction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirection([NotNull] PlayerCommandsParser.DirectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlayerCommandsParser.direction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirection([NotNull] PlayerCommandsParser.DirectionContext context);
}
} // namespace InputHandling.Antlr.Grammar
